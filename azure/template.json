{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceEnvironmentName": {
      "type": "string"
    },
    "serviceName": {
      "type": "string"
    },
    "environmentName": {
      "type": "string"
    },
    "configurationStorageConnectionString": {
      "type": "string"
    },
    "loggingRedisConnectionString": {
      "type": "string"
    },
    "loggingRedisKey": {
      "type": "string"
    },
    "storageConnectionString": {
      "type": "string"
    },
    "tokenCertificateThumbprint": {
      "type": "string"
    },
    "uiCustomHostname": {
      "type": "string",
      "defaultValue": ""
    },
    "uiCertificateName": {
      "type": "string",
      "defaultValue": ""
    },
    "apiCustomHostname": {
      "type": "string",
      "defaultValue": ""
    },
    "apiCertificateName": {
      "type": "string",
      "defaultValue": ""
    },
    "sharedKeyVaultName": {
      "type": "string"
    },
    "sharedKeyVaultResourceGroup": {
      "type": "string"
    },
    "idpTokenCertificateName": {
      "type": "string"
    }
  },
  "variables": {
    "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
    "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
    "uiAppServiceName": "[concat(variables('resourceNamePrefix'), 'ui-as')]",
    "apiAppServiceName": "[concat(variables('resourceNamePrefix'), 'api-as')]",
    "workerAppServiceName": "[concat(variables('resourceNamePrefix'), 'wkr-as')]",
    "webAppServicePlanName": "[concat(variables('resourceNamePrefix'), '-asp')]",
    "workerAppServicePlanName": "[concat(variables('resourceNamePrefix'), 'wkr-asp')]",
    "accountsCosmosDbName": "[concat(variables('resourceNamePrefix'), '-cdb')]"
  },
  "resources": [
    {
      "apiVersion": "2017-08-01",
      "name": "ui-app-insights",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('uiAppServiceName')]"
          },
          "attachedService": {
            "value": "[variables('uiAppServiceName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-08-01",
      "name": "api-app-insights",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('apiAppServiceName')]"
          },
          "attachedService": {
            "value": "[variables('apiAppServiceName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-08-01",
      "name": "ui-ssl-cert",
      "condition": "[greater(length(parameters('uiCertificateName')), 0)]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultCertificateName": {
            "value": "[parameters('uiCertificateName')]"
          },
          "keyVaultName": {
            "value": "[parameters('sharedKeyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('sharedKeyVaultResourceGroup')]"
          },
          "serverFarmId": {
            "value": "[reference('web-app-service-plan').outputs.appServicePlanId.value]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-08-01",
      "name": "api-ssl-cert",
      "condition": "[greater(length(parameters('apiCertificateName')), 0)]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultCertificateName": {
            "value": "[parameters('apiCertificateName')]"
          },
          "keyVaultName": {
            "value": "[parameters('sharedKeyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('sharedKeyVaultResourceGroup')]"
          },
          "serverFarmId": {
            "value": "[reference('web-app-service-plan').outputs.appServicePlanId.value]"
          }
        }
      },
      "dependsOn": [
        "ui-ssl-cert"
      ]
    },
    {
      "apiVersion": "2017-08-01",
      "name": "token-ssl-cert",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultCertificateName": {
            "value": "[parameters('idpTokenCertificateName')]"
          },
          "keyVaultName": {
            "value": "[parameters('sharedKeyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('sharedKeyVaultResourceGroup')]"
          },
          "serverFarmId": {
            "value": "[reference('web-app-service-plan').outputs.appServicePlanId.value]"
          }
        }
      },
      "dependsOn": [
        "api-ssl-cert"
      ]
    },
    {
      "apiVersion": "2017-08-01",
      "name": "ui-app-service",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('uiAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[variables('webAppServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[resourceGroup().name]"
          },
          "appServiceAppSettings": {
            "value": [
              {
                "name": "LoggingRedisConnectionString",
                "value": "[parameters('loggingRedisConnectionString')]"
              },
              {
                "name": "LoggingRedisKey",
                "value": "[parameters('loggingRedisKey')]"
              },
              {
                "name": "ConfigurationStorageConnectionString",
                "value": "[parameters('configurationStorageConnectionString')]"
              },
              {
                "name": "EnvironmentName",
                "value": "[parameters('environmentName')]"
              },
              {
                "name": "StorageConnectionString",
                "value": "[parameters('storageConnectionString')]"
              },
              {
                "name": "InstrumentationKey",
                "value": "[reference('ui-app-insights').outputs.InstrumentationKey.value]"
              },
              {
                "name": "WEBSITE_LOAD_CERTIFICATES",
                "value": "[parameters('tokenCertificateThumbprint')]"
              },
              {
                "name": "TokenCertificateThumbprint",
                "value": "[parameters('tokenCertificateThumbprint')]"
              }
            ]
          },
          "customHostName": {
            "value": "[parameters('uiCustomHostname')]"
          },
          "certificateThumbprint": {
            "value": "[if(greater(length(parameters('uiCertificateName')), 0), reference('ui-ssl-cert').outputs.certificateThumbprint.value, '')]"
          }
        }
      },
      "dependsOn": [
        "web-app-service-plan"
      ]
    },
    {
      "apiVersion": "2017-08-01",
      "name": "api-app-service",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('apiAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[variables('webAppServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[resourceGroup().name]"
          },
          "appServiceAppSettings": {
            "value": [
              {
                "name": "LoggingRedisConnectionString",
                "value": "[parameters('loggingRedisConnectionString')]"
              },
              {
                "name": "LoggingRedisKey",
                "value": "[parameters('loggingRedisKey')]"
              },
              {
                "name": "ConfigurationStorageConnectionString",
                "value": "[parameters('configurationStorageConnectionString')]"
              },
              {
                "name": "EnvironmentName",
                "value": "[parameters('environmentName')]"
              },
              {
                "name": "InstrumentationKey",
                "value": "[reference('api-app-insights').outputs.InstrumentationKey.value]"
              }
            ]
          },
          "customHostName": {
            "value": "[parameters('apiCustomHostname')]"
          },
          "certificateThumbprint": {
            "value": "[if(greater(length(parameters('apiCertificateName')), 0), reference('api-ssl-cert').outputs.certificateThumbprint.value, '')]"
          }
        }
      },
      "dependsOn": [
        "web-app-service-plan"
      ]
    },
    {
      "apiVersion": "2017-08-01",
      "name": "worker-app-service-plan",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-plan.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('workerAppServicePlanName')]"
          },
          "aspSize": {
            "value": "1"
          },
          "aspInstances": {
            "value": 1
          },
          "nonASETier": {
            "value": "Standard"
          }
        }
      }
    },
    {
      "apiVersion": "2017-08-01",
      "name": "web-app-service-plan",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-plan.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('webAppServicePlanName')]"
          },
          "aspSize": {
            "value": "1"
          },
          "aspInstances": {
            "value": 2
          },
          "nonASETier": {
            "value": "Standard"
          }
        }
      }
    },
    {
      "apiVersion": "2017-08-01",
      "name": "worker-app-service",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('workerAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[variables('workerAppServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[resourceGroup().name]"
          },
          "appServiceAppSettings": {
            "value": [
              {
                "name": "LoggingRedisConnectionString",
                "value": "[parameters('loggingRedisConnectionString')]"
              },
              {
                "name": "LoggingRedisKey",
                "value": "[parameters('loggingRedisKey')]"
              },
              {
                "name": "ConfigurationStorageConnectionString",
                "value": "[parameters('configurationStorageConnectionString')]"
              },
              {
                "name": "EnvironmentName",
                "value": "[parameters('environmentName')]"
              },
              {
                "name": "StorageConnectionString",
                "value": "[parameters('storageConnectionString')]"
              }
            ]
          },
          "appServiceConnectionStrings": {
            "value": [
              {
                "name": "AzureWebJobsDashboard",
                "connectionString": "[parameters('storageConnectionString')]",
                "type": "Custom"
              },
              {
                "name": "AzureWebJobsStorage",
                "connectionString": "[parameters('storageConnectionString')]",
                "type": "Custom"
              }
            ]
          },
          "deployStagingSlot": {
            "value": false
          }
        }
      },
      "dependsOn": [
        "worker-app-service-plan"
      ]
    },
    {
      "apiVersion": "2017-08-01",
      "name": "cosmos-db",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'cosmos-db.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "cosmosDbName": {
            "value": "[variables('accountsCosmosDbName')]"
          },
          "cosmosDbType": {
            "value": "GlobalDocumentDB"
          },
          "defaultConsistencyLevel": {
            "value": "Strong"
          }
        }
      }
    }
  ],
  "outputs": {
    "accountsCosmosDbPrimaryMasterKey": {
      "type": "string",
      "value": "[reference('cosmos-db').outputs.PrimaryMasterKey.value]"
    },
    "uiAppServiceName": {
      "type": "string",
      "value": "[variables('uiAppServiceName')]"
    },
    "apiAppServiceName": {
      "type": "string",
      "value": "[variables('apiAppServiceName')]"
    }
  }
}